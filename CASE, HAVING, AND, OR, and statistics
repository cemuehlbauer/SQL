--PROMPTS: Do each of the following at least once:

Group the data in a new way using a CASE statement.
Use a HAVING clause to determine something interesting about the data per category.
Use logical operators like AND or OR to filter the data in an interesting way.
Use an aggregate function like AVG, SUM, COUNT, MAX, and/or MIN to return summary statistics about the data.

--TABLE: 
CREATE TABLE bank_products (
    product_id INTEGER PRIMARY KEY,
    product_name TEXT,
    product_type TEXT,
    interest_rate DECIMAL(5, 2),
    monthly_fee DECIMAL(6, 2),
    minimum_balance DECIMAL(10, 2)
);

INSERT INTO bank_products (product_id, product_name, product_type, interest_rate, monthly_fee, minimum_balance)
VALUES
    (1, 'Savings Account', 'Savings', 0.75, 0.00, 100.00),
    (2, 'Checking Account', 'Checking', 0.25, 5.00, 50.00),
    (3, 'Business Account', 'Business', 1.50, 10.00, 500.00),
    (4, 'Credit Card', 'Credit Card', 18.99, 0.00, 0.00),
    (5, 'Mortgage Loan', 'Loan', 3.25, 0.00, 100000.00),
    (6, 'Certificate of Deposit', 'Savings', 1.50, 0.00, 1000.00),
    (7, 'Student Checking Account', 'Checking', 0.10, 0.00, 10.00),
    (8, 'Business Credit Card', 'Credit Card', 16.99, 0.00, 0.00),
    (9, 'Home Equity Loan', 'Loan', 4.50, 0.00, 50000.00),
    (10, 'IRA Account', 'Savings', 1.25, 0.00, 500.00),
    (11, 'Personal Loan', 'Loan', 8.75, 0.00, 5000.00),
    (12, 'Money Market Account', 'Savings', 1.00, 0.00, 500.00),
    (13, 'Youth Savings Account', 'Savings', 0.50, 0.00, 10.00),
    (14, 'Rewards Credit Card', 'Credit Card', 21.99, 0.00, 0.00),
    (15, 'Auto Loan', 'Loan', 4.25, 0.00, 20000.00);
    

-- Â© Copyright 2025 Break Into Tech  --

SELECT *
FROM fortune_companies;

--PROMPT ANSWERS:
SELECT COUNT(*) AS Number_Of_Companies,
CASE WHEN maternity_leave_weeks >=12 THEN "12+weeks"
WHEN maternity_leave_weeks >=6 THEN "6+weeks"
ELSE "less_than_6_weeks"
END AS 'Number_Of_Maternity_Leave_Weeks'
FROM fortune_companies
GROUP BY (CASE WHEN maternity_leave_weeks >=12 THEN "12+weeks"
WHEN maternity_leave_weeks >=6 THEN "6+weeks"
ELSE "less_than_6_weeks"
END);


SELECT COUNT(*) AS number_of_companies,
CASE WHEN paid_time_off_days >='30' THEN 'at least 30 days'
WHEN paid_time_off_days >= '20' THEN 'at least 20 days'
WHEN paid_time_off_days >= '10' THEN 'at least 10 days'
ELSE '<10 days off' END AS 'PTO days offered'
FROM fortune_companies
GROUP BY (CASE WHEN paid_time_off_days >='30' THEN 'at least 30 days'
WHEN paid_time_off_days >= '20' THEN 'at least 20 days'
WHEN paid_time_off_days >= '10' THEN 'at least 10 days'
ELSE '<10 days off' END);
